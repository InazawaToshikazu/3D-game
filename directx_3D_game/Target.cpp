//=============================================================================
//
// 目的地モデル表示処理 [Goal.cpp]
// Author : 稲澤俊和
//
//=============================================================================

//=============================================================================
// インクルード
//=============================================================================
#include "main.h"
#include "Target.h"
#include "Renderer.h"
#include "SceneX.h"
#include "Manager.h"
//=============================================================================
// マクロ定義
//=============================================================================
#define FIELD_WIDTH		(100.0f)		// 地面の幅
#define FIELD_HIGHT		(100.0f)		// 地面の縦
#define MODEL_ROT_SPEED				(0.05f)		//モデルの回転速度
#define MODEL_SPEED_X				(1.7f)		//モデルの移動速度
#define MODEL_SPEED_Z				(1.7f)		//
#define MODEL_SPEED_Y				(0.1f)		//
#define MODEL_SPEED					(0.7f)		//

//=============================================================================
// グローバル変数
//=============================================================================
CRenderer* CTarget::m_pTarget=NULL;

//=============================================================================
// コンストラクタ
//=============================================================================
CTarget::CTarget(OBJTYPE nObjType,int nPriority):CSceneX(nObjType,nPriority)
{
	m_Rot = D3DXVECTOR3(0.0f,0.0f,0.0f);
	m_Pos = D3DXVECTOR3(0.0f,0.0f,0.0f);
	m_RotDest=D3DXVECTOR3(0.0f,0.0f,0.0f);
}

//=============================================================================
// デストラクタ
//=============================================================================
CTarget::~CTarget(void)
{
	
}

//=============================================================================
// オブジェクトの生成
//=============================================================================
CTarget* CTarget::Create(float fPosX,float fPosY,float fPosZ,CRenderer* m_pRenderer)
{
	CTarget *pTarget;
	//インスタンスの作成
	pTarget = new CTarget(OBJTYPE_TARGET);
	//CEnemyのInitを呼び出す
	pTarget->Init(m_pRenderer);
	//座標の設定
	pTarget->m_Pos = D3DXVECTOR3(fPosX,fPosY,fPosZ);
	pTarget->SetPos(fPosX,fPosY,fPosZ);
	m_pTarget = m_pRenderer;
	return pTarget;
}

//=============================================================================
// 初期化処理
//=============================================================================
HRESULT CTarget::Init(CRenderer *pRenderer)
{
	//自機モデルの指定
	FileName="data/MODEL/target.x";

	CSceneX::Init(pRenderer);
	return S_OK;
}

//=============================================================================
// 終了処理
//=============================================================================
void CTarget::Uninit(void)
{
	//自身のリソースの解放

	CSceneX::Uninit();
}

//=============================================================================
// 更新処理
//=============================================================================
void CTarget::Update(void)
{
	float Rot=0.5f;

	//CDebugProc::Print("\n的の角度: (%f)\n" ,  m_Rot.y);
	this->CSceneX::SetRot(m_Rot.x,m_Rot.y,m_Rot.z);
	CSceneX::Update();


}

//=============================================================================
// 描画処理
//=============================================================================
void CTarget::Draw(void)
{
	CSceneX::Draw();
}

